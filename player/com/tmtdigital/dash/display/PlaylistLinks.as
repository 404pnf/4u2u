/** * Copyright 2008 - TMTDigital LLC * * Author:   Travis Tidwell (www.travistidwell.com) * Version:  1.0 * Date:     June 9th, 2008 * * Description:  The Playlist class is used to manage the playlists in the * Dash player. * **/package com.tmtdigital.dash.display{   import com.tmtdigital.dash.display.Skinable;   import com.tmtdigital.dash.display.PlaylistLink;   import com.tmtdigital.dash.utils.Utils;   import com.tmtdigital.dash.display.controls.ScrollRegion;   import com.tmtdigital.dash.config.Params;   import flash.display.*;   public class PlaylistLinks extends ScrollRegion   {      public function PlaylistLinks( _skin:MovieClip )      {         super( _skin );      }      /**       * Loads all of our playlist links.       */      public function loadLinks()      {         if( skin ) {                     // Initialize and empty our links.            super.initialize( true, Params.flashVars.linksvertical, 2 );            super.empty();            // Add the links to the links scroll region.            addLinks();            // Setup the links scroll region.            super.setupScrollRegion();         }      }      /**       * Selects a link as active       */      public function selectLink( linkArg:String )      {         // Iterate through all of the links and select the right one.         var i:int = super.elements.length;         while (i--)         {            var link:PlaylistLink = (super.getItem(i) as PlaylistLink);            link.setSelected( linkArg == link.arg );         }            }      /**       * Adds the links to the links scroll region.       */      private function addLinks()      {         var linktext:Object = Params.flashVars.linktext;         if ( linktext[0] ) {            // Add the "all" link...            addLink( Params.flashVars.linkalltext, "all", 0 );            var linkarg:Object = Params.flashVars.linkarg;            var linkindex:Object = Params.flashVars.linkindex;            // Iterate through all of our linktext array.            for (var index in linktext) {               // Add a new link for every link text defined.               addLink( linktext[index], linkarg[index], linkindex[index] );            }								selectLink( "all" );         }      }      /**       * Adds a new dynamic link to our playlist.       *       * @param - The text to show in the link.       * @param - The instance of the link to add.       */      private function addLink( text:String, arg:String, index:Number )      {         // Only want to continue here if our skin defines a playlist link object.         if (rootSkin.getPlaylistLink is Function) {            // Get the skin for the link using our skin SWF.            var linkSkin:MovieClip = rootSkin.getPlaylistLink();            if (linkSkin) {               // Define a new playlist link object.               var link:PlaylistLink = new PlaylistLink( linkSkin );               // Setup the new link.               link.setLink( text, arg, index );               // Add this link to our scroll region.               super.addItem( link, 100 );            }         }      }   }}
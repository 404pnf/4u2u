<?php

//$Id: nodevote.module,v 1.31.2.1 2008/10/15 16:52:12 kbahey Exp $

// Copyright 2005 Khalid Baheyeldin http://2bits.com

/**
* Implementation of hook_menu().
*/

function fanyi_menu(){

	$items['babiejiangli'] = array(
        'title' => '用户积分奖励',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('babiejiangli_form'),
        'access arguments' => array('give points'),
        'type' => MENU_NORMAL_ITEM,
		);
	$items['all_fanyi'] = array(
        'title' => '所有翻译大赛图书列表',
        'page callback' => 'get_all_fanyi',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
		);
$items['contact/emailautocomplete'] = array(
    'page callback' => 'contact_emailautocomplete', 
    'access arguments' => array('access content'), 
    'type' => MENU_CALLBACK
  );

return $items;
}

function contact_emailautocomplete($string){
	$matches = array();
	if ($string) {
		$result = db_query_range("SELECT u.uid,u.name FROM {users} u WHERE u.name LIKE('%s%%')", $string, 0, 50);
		while ($xiangmuname = db_fetch_object($result)) {
			$matches[$xiangmuname->name .' [uid:'. $xiangmuname->uid .']'] = check_plain($xiangmuname->name);
		}
	}
	print drupal_to_js($matches);
}

/**
*列出所有翻译大赛的书
*/

function get_all_fanyi(){

	drupal_add_css(drupal_get_path("module","fanyi")."/rubyadd.css");

	$head = array('书名','翻译到了第几章','完成情况','书籍介绍');


	$results = pager_query("SELECT nid FROM {node} WHERE type='%s' ORDER BY nid",30,0,NULL,"bookcase");

	while($result = db_fetch_object($results)){

		$node = node_load($result->nid);

	//	print_r($node);exit;

		$newese_chapter = db_fetch_object(db_query("SELECT MAX(c.nid) as nid,MAX(c.field_fanyi_zhangjie_value) as zhangjie FROM {nodehierarchy} h INNER JOIN {content_type_fanyi_chapter} c ON h.nid=c.nid WHERE h.parent=%d GROUP BY c.field_fanyi_zhangjie_value",$node->nid));

	if($newese_chapter->zhangjie && $node->fanyi_zhangjieshu[0]['value']){

		$wanchengbi = number_format($newese_chapter->zhangjie/$node->fanyi_zhangjieshu[0]['value'],2);

	}

	if($newese_chapter->nid){
		$link_id = $newese_chapter->nid;
	}else{
		$link_id = $node->nid;
	}

				$rows[] = array(
					array('data' =>l($node->title,"node/".$link_id)),
					array('data' => $newese_chapter->zhangjie),
					array('data' => $wanchengbi),
					array('data' => $node->field_bookcase_contentintro[0]['value']),
					);
		}

	$output .= theme_table($head,$rows);
	$output .= theme('pager',0,30,NULL);

	return $output;

}


/**
* 利用此form,管理员可以给用户的babie积分和userpoints积分里各加入相应的分数 
*/

function babiejiangli_form(){

   $form['username'] = array(
	'#type' => 'textfield',
	'#title' => '请输入用户名',
	'#prefix' => '<div id="username">',
	'#suffix' => '</div>',
	'#required' => TRUE,
    '#autocomplete_path' => 'contact/emailautocomplete',
	);

  $form['points'] = array(
	'#type' => 'textfield',
	'#title' => '请输入要奖励的分数',
	'#prefix' => '<div id="points">',
	'#suffix' => '</div>',
	'#required' => TRUE,
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => '提交',
	);
   return $form;

}

function babiejiangli_form_validate(&$form, &$form_state) {

	if($form_state["values"]["username"]){

		preg_match_all('/\[.+]/', $form_state["values"]["username"], $result);
		preg_match_all('/\d+/', $result[0][0], $result);

		if(!is_numeric($result[0][0])){

			form_set_error('username',"没有这个用户，请重新选择");
		}else{

			$form_state["values"]["username"] = $result[0][0];
		}

	}

	if(!is_numeric($form_state["values"]["points"])){
		form_set_error('points',"积分必须为数字");

	}


}


function babiejiangli_form_submit(&$form, &$form_state) {

 $add_uid = $form_state["values"]["username"];
 $points = $form_state["values"]["points"];

 global $user;

	$params = array (
		  'uid' => $add_uid,
		  'points' => $points,
		  'description' => '管理员奖励的分数',
		  'approver_uid' => $user->uid,
		);
	userpoints_userpointsapi($params); 


$is_babie_user = db_fetch_object(db_query("SELECT uid,points FROM {babie_points} WHERE uid=%d",$add_uid));

if($is_babie_user->uid){

	$total_points = 0;

	$total_points = $is_babie_user->points + $points;

	db_query("UPDATE {babie_points} SET points = %d WHERE uid=%d",$total_points,$is_babie_user->uid);

}else{

	db_query("INSERT INTO {babie_points} (uid,points) VALUES (%d,%d)",$add_uid,$points);
}

 drupal_set_message("您给该用户的巴别积分和userpoints积分分别成功加入了 ".$points." 分");

}


function fanyi_perm(){
	return array('give points');
}


/**Hook_link
* 主要处理不同版本Chapter
*/

function fanyi_link($type, $node, $teaser = FALSE){

	if($type == "node" && ($node->type == "fanyi_chapter" || $node->type == "readthink")){
		
		$zhangjie = $node->field_fanyi_zhangjie[0]["value"];

		$parent_nid = db_result(db_query("SELECT parent FROM {nodehierarchy} WHERE nid = %d",$node->nid));
		$results = db_query("SELECT c.nid FROM {nodehierarchy} h INNER JOIN {content_type_fanyi_chapter} c ON h.nid=c.nid WHERE h.parent=%d AND c.field_fanyi_zhangjie_value='%s' ORDER BY c.nid ASC",$parent_nid,$zhangjie);
		while($result = db_fetch_object($results)){
			if($node->nid != $result->nid){
			  $title = db_result(db_query("SELECT title FROM {node} WHERE nid=%d",$result->nid));
			  $links['chapter_version_'.$result->nid] = array(
              'title' => $title,
              'href' => "node/".$result->nid,
            );
		}
	}

if($node->type == "fanyi_chapter"){

	$back = '返回本书目录';

}

		$links['parent'] = array(
		  'title' => $back,
		  'href' => "node/".$parent_nid,
		);
	}

if($type == 'node' && $node->type == "bookcase" && user_access("create fanyi_chapter content")){

		$links['create_new_chapter'] = array(
		  'title' => t('Create new chapter'),
		  'href' => "node/add/fanyi-chapter",
		  'query' => 'destination=node/'.$node->nid.'&edit[parent]='.$node->nid,
		);
}



 return $links;
}


/**
 * Implmentation of hook_nodeapi().
 */
function fanyi_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'insert':
		if($node->type =="fanyi_chapter"){
				save_chapter($node);
			//	check_version($node);
		}

      break;
    case 'update':
		if($node->type =="fanyi_chapter"){
			save_chapter($node);
		}
      break;
    case 'delete':
		if($node->type =="fanyi_chapter"){
			delete_chapter($node);
		}
      break;
	 case 'prepare':
		// do something
      break;
    case 'view':

	  global $user;

      if($node->type =="fanyi_chapter"){
		display_chapter_flash($node);



		if(in_array(variable_get('who_can_view', '技术人员'),$user->roles)){
			//	display_all_chapter_table($node,TRUE);
		}
		display_prev_next($node);
      }

	  if($node->type == 'bookcase'){
		  if(in_array(variable_get('who_can_view', '技术人员'),$user->roles)){
				display_all_chapter_table($node);
		  }
	  }
    break;
  }
}


/*
*插入翻译内容到谢工程师的数据表
*/

function save_chapter($node){
	
	$parent_nid = db_result(db_query("SELECT parent FROM {nodehierarchy} WHERE nid = %d",$node->nid)); 
	$parent_node = node_load($parent_nid);
	
	if(db_result(db_query("SELECT CHAPTER_ID FROM {BILINGUAL_PAGES} WHERE CHAPTER_ID=%d",$node->nid))){

		db_query("UPDATE {BILINGUAL_PAGES} SET PAGE_TEXT_ORIGINAL='%s', PAGE_TEXT_TRANSLATION='%s' WHERE CHAPTER_ID=%d",$node->field_fanyi_yuanwen[0]['value'],$node->field_fanyi_zhongwen[0]['value'],$node->nid);

	}else{

		db_query("INSERT INTO {BILINGUAL_PAGES} (PAGE_TEXT_ORIGINAL,PAGE_TEXT_TRANSLATION,BOOK_ID,BOOK_NAME_ORIGINAL,CHAPTER_ID,CHAPTER_NAME_ORIGINAL) VALUES ('%s','%s',%d,'%s',%d,'%s')", $node->field_fanyi_yuanwen[0]['value'],$node->field_fanyi_zhongwen[0]['value'],$parent_node->nid,$parent_node->title,$node->nid,$node->title);

	}

}

function delete_chapter($node){

	db_query("DELETE FROM {BILINGUAL_PAGES} WHERE CHAPTER_ID = %d",$node->nid);

}

/**
*display flash reader, hiden two filed;
*/

function display_chapter_flash($node){

drupal_add_js(drupal_get_path("module","fanyi")."/Scripts/AC_RunActiveContent.js");
drupal_add_js(drupal_get_path("module","fanyi")."/Scripts/history.js"); 
drupal_add_js(drupal_get_path("module","fanyi")."/Scripts/swfobject.js");
drupal_add_css(drupal_get_path("module","fanyi")."/Scripts/history.css");

global $user;
global $base_root;

$turnpage = 'function getSWF(movieName)
{
    if (navigator.appName.indexOf("Microsoft") != -1)
    {
        return window[movieName];
    }
    else
    {
        return document[movieName];
    }
}

function getPageParameters()
{

	var tmpStr = \'{"chapterID":"'.$node->nid.'","userID":"'.$user->uid.'","userName":"'.$user->name.'","allowComment":"true","baseUrl":"'.$base_root.base_path().drupal_get_path("module","fanyi").'/querypage.php"}\';
	return tmpStr; 
}

';


drupal_add_js($turnpage, 'inline');




$falsh_js = 'var swfVersionStr = "10.0.0";
            <!-- To use express install, set to playerProductInstall.swf, otherwise the empty string. -->
            var xiSwfUrlStr = "'.$base_root.base_path().drupal_get_path("module","fanyi").'/playerProductInstall.swf";
            var flashvars = {};
            var params = {};
            params.quality = "high";
            params.bgcolor = "#ffffff";
            params.allowscriptaccess = "sameDomain";
            params.allowfullscreen = "true";
            params.readermode = "translationevent";
            var attributes = {};
            attributes.id = "XanaduReader";
            attributes.name = "XanaduReader";
            attributes.align = "middle";
            swfobject.embedSWF(
                "'.$base_root.base_path().drupal_get_path("module","fanyi").'/XanaduReader.swf", "flashContent", 
                "650", "500", 
                swfVersionStr, xiSwfUrlStr, 
                flashvars, params, attributes);
			swfobject.createCSS("#flashContent", "display:block;text-align:left;");';

drupal_add_js($falsh_js, 'inline');

	$object = '<object width="650" height="500" align="middle" type="application/x-shockwave-flash" id="XanaduReader" name="XanaduReader" data="'.$base_root.base_path().drupal_get_path("module","fanyi").'/XanaduReader.swf">
	<param name="quality" value="high">
	<param name="bgcolor" value="#ffffff">
	<param name="allowscriptaccess" value="sameDomain">
	<param name="allowfullscreen" value="true">
	<param name="readermode" value="translationevent">
	</object>';

	$node->content["flash_reader"] = array(
      "#value"    => $object,
      "#weight"   => 5
    );




// 去掉翻译中文和原文的字段

unset($node->content['field_fanyi_zhongwen']);
unset($node->content['field_fanyi_yuanwen']);

}

/**
*显示本下面的所有章节
*/

function display_all_chapter_table($node,$fanyi_chapter=FALSE){

	if($fanyi_chapter){

		$my_nodenid = db_result(db_query("SELECT parent FROM {nodehierarchy} WHERE nid = %d",$node->nid)); 

	}else{

		$my_nodenid = $node->nid;
	}


	$head = array(
	array('data' => '章节','field' => 'field_fanyi_zhangjie_value'),
	array('data' => '标题'),
	array('data' => '翻译状态'),
	);

global $user;

//if(in_array(variable_get('who_can_view', '技术人员'),$user->roles)){

	$head[] = array('data' => '该章节平均得分');
	$head[] = array('data' => '与平均分最接近的用户是');

//}


	$results = pager_query("SELECT c.nid as nid,c.field_fanyi_zhangjie_value,c.field_fanyi_zhuangtai_value FROM {nodehierarchy} h INNER JOIN {content_type_fanyi_chapter} c ON h.nid=c.nid WHERE h.parent=%d ".tablesort_sql($head),20, 0, NULL,$my_nodenid);


	$i = 0;

	while($result = db_fetch_object($results)){

		$average = "";

		 switch ($result->field_fanyi_zhuangtai_value) {
			case '1':
				$zhuangtai = '未开始';
			  break;
			case '2':
				$zhuangtai = '翻译中';
				break;
			case '3':
				$zhuangtai = '开放评分';
				break;
			 case '4':
				 $zhuangtai = '已完成';
			 break;

		 }



		$title = db_result(db_query("SELECT title FROM {node} WHERE nid=%d",$result->nid));



		$vote = db_fetch_object(db_query("SELECT count(uid) as total_users,sum(vote) as total_vote FROM {nodevote} WHERE nid=%d",$result->nid));

		$average_user = db_result(db_query("SELECT uid FROM {nodevote}"));

		if($vote->total_users && $vote->total_vote){

			$average = number_format($vote->total_vote / $vote->total_users,2);


// count who are most jiejin average
			
			$prex = db_result(db_query("SELECT uid FROM {nodevote} WHERE vote < %d AND nid=%d ORDER BY vote DESC LIMIT 0,1",$average,$result->nid));

			$next = db_result(db_query("SELECT uid FROM {nodevote} WHERE vote > %d AND nid=%d ORDER BY vote LIMIT 0,1",$average,$result->nid));

			$prex_sub = $average - $prex;

			$next_sub = $next - $average;

			$two_won = FALSE;

			if($prex_sub == $next_sub){

				$two_won = TRUE;

			}else{

				$who_won = $prex_sub < $next_sub ? $prex : $next;

			}

		//	$rows[$i][] = array('data' => $average);

			if($who_won){

				$won_user = user_load($who_won);
				$won_final = l($won_user->name,"user/".$won_user->uid);

			}elseif($two_won){

				$won_user1 = user_load($prex);
				$won_user2 = user_load($next);
				$won_final  =l($won_user1->name,"user/".$won_user1->uid)." , ".l($won_user2->name,"user/".$won_user2->uid);
		}

} // end if total_users && total_vote

$average = $average ? $average : "还没有";

$won_final = $won_final ? $won_final : "还没有";

		$rows[] = array(
			array('data' => "第".$result->field_fanyi_zhangjie_value."章"),
			array('data' => l($title,'node/'.$result->nid)),
			array('data' => $zhuangtai),
			array('data' => $average),
			array('data' => $won_final),
			);
	// end count		

			$i++;

	}

if(count($rows) > 0){

$node->content["all_chapter_table"] = array(
      "#value"    => "<div id='all-chapter-list'>".theme_table($head,$rows).theme('pager', NULL, 20, 0)."</div>",
      "#weight"   => 15
    );

}
}

/**
*积分设置 
*/

function fanyi_userpoints($op, $points = 0, $uid = 0, $event = '') {
  switch($op) {
    case 'setting':
      $group = 'duhougan';


      $form[$group]['pingwei_add'] = array(
        '#type'          => 'textfield',
        '#title'         => t("评委如果觉的好，应加的分数"),
        '#default_value' => variable_get('pingwei_add', '3'),
        '#size'          => 5,
        '#maxlength'     => 5,
      );
    return $form;
  }
}

function fanyi_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'view') {

global $user;

$babie_points = db_result(db_query("SELECT points FROM {babie_points} WHERE uid=%d",arg(1)));

if($babie_points){

	$small_points = floor($babie_points/20);


	if($small_points > 0 && $small_points < 10){

		$babie_class = "mu";
		$ceng = $small_points;
	
	}elseif($small_points >= 10 && $small_points < 20){

		$ceng = substr($small_points,1,1);

		$babie_class = "tie";
	}elseif($small_points >= 20 && $small_points < 30){

		$ceng = substr($small_points,1,1);

		$babie_class = "tong";
	}elseif($small_points >= 30 && $small_points < 40){

		$ceng = substr($small_points,1,1);

		$babie_class = "yin";
	}elseif($small_points >= 40 && $small_points < 50){

		$ceng = substr($small_points,1,1);

		$babie_class = "jin";
	}else{
		$babie_class = "jin";
		$ceng = 10;
	}


	$account->content["babie"] = array(
		"#value" => $babie_points."  分",
		"#prefix" => "<div class='babie'><span class='".$babie_class."'>巴别积分数 : </span>",
		"#suffix" => "<span class='babie-ceng'>巴别塔层数:  ".$ceng."</span>",
	);


}else{ // 如果没有积分，则提示用户

			$account->content["babie"] = array(
				"#value" => "0 分",
				"#prefix" => "<span class='no-babie'>您还没有巴别积分哦！继续努力! : </span>",
			);

	}

// end op=views
  }
}


function display_prev_next($node){

	$my_nodenid = db_result(db_query("SELECT parent FROM {nodehierarchy} WHERE nid = %d",$node->nid)); 

	$results = db_query("SELECT MAX(c.nid) as nid,c.field_fanyi_zhangjie_value,c.field_fanyi_zhuangtai_value FROM {nodehierarchy} h INNER JOIN {content_type_fanyi_chapter} c ON h.nid=c.nid WHERE h.parent=%d GROUP BY c.field_fanyi_zhangjie_value",$my_nodenid);

	while($result = db_fetch_object($results)){
		if($result->field_fanyi_zhangjie_value < $node->field_fanyi_zhangjie[0]['value']){

			

			$prev = l("上一章","node/".$result->nid);

		}elseif($result->field_fanyi_zhangjie_value > $node->field_fanyi_zhangjie[0]['value']){

			$next = l("下一章","node/".$result->nid);

		}

	}

$node->content["prev_next"] = array(
      "#value"    => "<div id='prev-next'>".$prev."    |     ".$next."</div>",
      "#weight"   => 9,
    );

}

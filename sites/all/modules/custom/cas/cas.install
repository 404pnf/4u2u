<?php

/**
 * @file
 * Installation hooks for the CAS module.
 */

/**
 * Implementation of hook_schema().
 */
function cas_schema() {
  $schema = array();

  $schema['cas_login_data'] = array(
    'description' => 'Stores CAS session information.',
    'fields' => array(
      'cas_session_id' => array(
        'description' => 'CAS session ID',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid associated with the CAS session.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cas_session_id'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function cas_install() {
  drupal_install_schema('cas');
}

/**
 * Implementation of hook_uninstall().
 */
function cas_uninstall() {
  drupal_uninstall_schema('cas');

  // Delete variables.
  variable_del('cas_access');
  variable_del('cas_allow_rememberme');
  variable_del('cas_authmap');
  variable_del('cas_auto_assigned_role');
  variable_del('cas_cert');
  variable_del('cas_changePasswordURL');
  variable_del('cas_check_first');
  variable_del('cas_debugfile');
  variable_del('cas_domain');
  variable_del('cas_exclude');
  variable_del('cas_first_login_destination');
  variable_del('cas_hide_email');
  variable_del('cas_hide_password');
  variable_del('cas_library_dir');
  variable_del('cas_login_drupal_invite');
  variable_del('cas_login_form');
  variable_del('cas_login_invite');
  variable_del('cas_login_message');
  variable_del('cas_login_redir_message');
  variable_del('cas_logout_destination');
  variable_del('cas_pages');
  variable_del('cas_pgtformat');
  variable_del('cas_pgtpath');
  variable_del('cas_port');
  variable_del('cas_proxy');
  variable_del('cas_registerURL');
  variable_del('cas_server');
  variable_del('cas_uri');
  variable_del('cas_user_register');
  variable_del('cas_version');

  // And old (un-used) variables.
  variable_del('cas_cert_verify');
  variable_del('cas_first_login');
  variable_del('cas_hijack_user');
  variable_del('cas_ldap_email_attribute');
  variable_del('cas_logout_redirect');
  variable_del('cas_signout');
  variable_del('cas_useldap');
  variable_del('cas_useldap_groups');
  variable_del('cas_verify');
}

/**
 * Implements hook_requirements().
 */
function cas_requirements($phase) {
  $requirements = array();
  $t = get_t();

  if ($phase == 'runtime') {
    $phpcas_url = 'https://wiki.jasig.org/display/CASC/phpCAS';

    $requirements['phpcas']['title'] = $t('phpCAS');
    // Okay to call functions from cas.module since we are in the runtime
    // phase. We hide errors here in case phpcas could not be loaded.
    if ($version = @cas_phpcas_load()) {
      $requirements['phpcas']['value'] = $version;
      $requirements['phpcas']['severity'] = REQUIREMENT_INFO;
      $requirements['phpcas']['description'] = $t('Please check periodically for <a href="@phpcas_url">security updates</a> to phpCAS.', array('@phpcas_url' => $phpcas_url));
    }
    else {
      $requirements['phpcas']['value'] = $t('Not found');
      $requirements['phpcas']['severity'] = REQUIREMENT_ERROR;
      $requirements['phpcas']['description'] = $t('phpCAS could not be loaded. Please <a href="@phpcas_url">download phpCAS</a> and <a href="@cas_url">configure its location</a>.', array('@phpcas_url' => $phpcas_url, '@cas_url' => url('admin/user/cas')));
    }
  }
  return $requirements;
}

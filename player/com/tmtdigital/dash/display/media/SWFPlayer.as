package com.tmtdigital.dash.display.media{   import com.tmtdigital.dash.events.DashEvent;   import com.tmtdigital.dash.display.media.IMedia;   import flash.display.*;   import flash.events.*;   import flash.media.*;   import flash.utils.*;   import flash.net.*;   public class SWFPlayer extends MovieClip implements IMedia   {      public function SWFPlayer()      {         loader = null;         _loaded = false;         bytesLoaded = 0;         bytesTotal = 0;      }      public function connect( stream:String ) : void      {         swfTimer = new Timer(100);         swfTimer.addEventListener( TimerEvent.TIMER, timeHandler );         swfTimer.stop();               dispatchEvent( new DashEvent( DashEvent.MEDIA_CONNECTED ) );         }      private function timeHandler(e:TimerEvent)      {         dispatchEvent( new DashEvent( DashEvent.MEDIA_UPDATE ) );      }      public function loadFile( file:String ) : void      {         bytesLoaded = 0;         bytesTotal = 0;         removeChild(swf);	         _loadedFile = file;		            loader = new Loader();         loader.contentLoaderInfo.addEventListener( Event.COMPLETE, onLoaded );			            loader.contentLoaderInfo.addEventListener( ProgressEvent.PROGRESS, onLoading );         loader.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, onError );         loader.load(new URLRequest(file));         dispatchEvent( new DashEvent( DashEvent.MEDIA_LOADING ) );      }      private function onLoaded( event:Event )       {         _loaded = true;         swf = MovieClip(loader.content);         addChild(swf);         dispatchEvent( new DashEvent( DashEvent.MEDIA_READY ) );      }      private function onLoading( event:ProgressEvent )       {         bytesLoaded = event.bytesLoaded;         bytesTotal = event.bytesTotal;         dispatchEvent( new DashEvent( DashEvent.MEDIA_PROGRESS ) );      }      private function onError(event:Event):void      {         _loaded = false;         trace("IOError: " + event);      }      public function set volume(vol:Number) : void      {      }      public function playFile( _file:String ) : void      {         swfTimer.start();         swf.play();         _playing = true;         dispatchEvent( new DashEvent( DashEvent.MEDIA_PLAYING ) );      }      public function pause() : void      {         swfTimer.stop();         swf.stop();         _playing = false;         dispatchEvent( new DashEvent( DashEvent.MEDIA_PAUSED ) );      }      public override function stop() : void      {         _playing = false;         _loaded = false;         swf.stop();         swfTimer.stop();         loader.unload();         dispatchEvent( new DashEvent( DashEvent.MEDIA_STOPPED ) );      }      public function seek( pos:Number ) : void      {         if( swf && stage ) {            swf.gotoAndPlay( (pos / stage.frameRate) );         }      }      public function get totalTime():Number      {         if( swf && stage ) {            return (swf.totalFrames / stage.frameRate);         }         else {            return 0;         }      }      public function get playheadTime():Number      {         if( swf && stage ) {            return (swf.currentFrame / stage.frameRate);         }         else {            return 0;         }		      }      public function setSize( _width:Number, _height:Number )      {         swf.width = _width;         swf.height = _height;      }      public function get ratio():Number      {         return (swf.width / swf.height);      }      public function get type():String      {         return "swf";      }            public function get loaded():Boolean      {         return _loaded;      }            public function get loadedFile():String      {         return _loadedFile;      }            public function get playing() : Boolean      {         return _playing;      }            public function get buffering() : Boolean      {         return _buffering;      }				      public var bytesLoaded:Number;      public var bytesTotal:Number;      private var _playing:Boolean = false;	      private var _buffering:Boolean = false;      private var _loaded:Boolean = false;      private var _loadedFile:String = "";      private var swfTimer:Timer;            private var loader:Loader;	      private var swf:MovieClip;		   }}
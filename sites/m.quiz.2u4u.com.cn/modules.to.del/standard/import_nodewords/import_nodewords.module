<?php


/**
 *    为了网站的seo，为文章页添加description等meta信息，向nodewords数据库插入数据
 * 
 *     by @wzs 20100603
 */


function import_nodewords_menu(){
	$items = array();
	$items['import/nodewords'] = array(
	       'title' => '添加 meta tags',
	       'access callback'=>true, 
	       'page callback' => 'import_nodewords',
	       'type' => MENU_CALLBACK,
	      
	);
	return $items;	
	
}


function import_nodewords(){
	
$node_type = array ("quiz");
      //  $node_type = array ("blog");
	foreach($node_type as $type){
        if($type == 'ebook'){
           	$sql = "SELECT `field_yuedu_summary_value` summary, ce.nid, ce.vid
					FROM `content_type_ebook` ce
					LEFT JOIN `node` n ON n.nid = ce.nid
					WHERE `field_yuedu_summary_value` IS NOT NULL 
					AND n.status =1
					AND NOT 
					EXISTS (
					SELECT * 
					FROM `content_type_ebook` 
					WHERE vid > ce.vid
					AND nid = ce.nid)";
        }
        
     if($type == 'shipin'){
     	
     	$sql = "SELECT `field_shipin_neirong_value` summary,cs.nid, cs.vid
				FROM `content_type_shipin` cs 
				LEFT JOIN `node` n ON n.nid = cs.nid
				WHERE `field_shipin_neirong_value` IS NOT NULL 
				AND n.status =1
				AND NOT 
				EXISTS (
				SELECT * 
				FROM `content_type_shipin` 
				WHERE vid > cs.vid
				AND nid = cs.nid
				)"; 	
     }  
        
    if($type == 'quiz'){
    	
    	$sql = "SELECT `body` summary, n.nid, n.vid
				FROM `node_revisions` nr
				LEFT JOIN `node` n ON n.nid = nr.nid
				WHERE `body` IS NOT NULL 
				AND n.type = 'quiz'
				AND n.status =1
				AND NOT 
				EXISTS (				
				SELECT * 
				FROM `node_revisions` 
				WHERE vid > nr.vid
				AND nid = nr.nid
				)";  	
    	
     }    
        

  if($type == 'blog'){
		$sql = "SELECT `teaser` summary,n.nid,n.vid FROM `node_revisions` nr 
				LEFT JOIN `node` n ON n.nid = nr.nid
				WHERE `teaser` IS NOT NULL AND n.type='blog'
				AND n.status =1
				AND n.nid not in (				
				SELECT nid
				FROM `og_ancestry` 
				WHERE `group_nid` =9821						
				)
				AND NOT 
				EXISTS (
				SELECT * 
				FROM `node_revisions` 
				WHERE vid > nr.vid
				AND nid = nr.nid
				)";
}

  if($type == 'best_answer'){
	$sql = "SELECT `body` summary,n.nid,n.vid FROM `node_revisions` nr 
			LEFT JOIN `node` n ON n.nid = nr.nid
			WHERE n.type='best_answer'  AND n.nid>3000 AND `body` IS NOT NULL
			AND n.status =1
			AND NOT 
			EXISTS (
			SELECT * 
			FROM `node_revisions` 
			WHERE vid > nr.vid
			AND nid = nr.nid
			)";
  }
    
 	$rs = db_query($sql);
     while($row = db_fetch_object($rs)){
         	
        		if($row->vid>0&$row->nid>0){
        			$query = "SELECT name FROM `term_data` td
        			          LEFT JOIN `term_node` tn ON tn.tid = td.tid
        			          WHERE tn.nid=%d AND tn.vid=%d";
        		    $result = db_query($query,$row->nid,$row->vid);
        			$keywords = '';
        			while($arr = db_fetch_object($result)){           			
        			     $keywords .= $arr->name.",";
        			}
        		}
        	     $id = $row->nid;
        	     
        	     $description = strip_tags($row->summary);
        	     if($type=='blog'){
        	     	if(strstr($description,"http")){
	        	     	$end = preg_replace("/http[a-zA-Z0-9.?+&@#\/%?=~_\-|!:,.;]*\s+?/m","||",$description);
	        	        $new = explode("||",$end);
	        	        if(drupal_strlen(trim($new[0]))<20){
	        	           $description = trim($new[1]);
	        	        }else 
	        	           $description = trim($new[0]);
	              	}
        	     }
        	     
        	     
        	     if(drupal_strlen($description)>120){
        	          $description = drupal_substr($description,0,120);    
        	          $description .= "...";       	     
        	     }           	            	     
        	  // echo $row->nid."--".$description."<br>";
        	     $meta = array(
          	        "keywords" => array("value"=>substr($keywords,0,-1)),
          	        "description" => array("value"=>trim($description)),       	     
        	     );

        		nodewords_save_tags('node', $id, $meta, TRUE);
        	}        	
           	
        }
	
	 
	
	
  echo 'haa';
	
	
}






?>

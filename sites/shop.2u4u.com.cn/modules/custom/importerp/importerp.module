<?php
// Implements hook_menu
function importerp_menu() {
  $items = array();
  $items['importerp'] = array(
    'title'           => t('Import ERP'),
    'description'     => t('Import ERP'),
    'access callback' => 'config_erp_access',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('import_erp_form'),
    'type' => MENU_NORMAL_ITEM,
    'weight'          => -10,
  ); 
  return $items;
}

function config_erp_access() {
  return (($GLOBALS['user']->uid == 1));
}

/**
 * Builds the import form.
 */
function import_erp_form($form_state) {

  $form['data_source'] = array(
    '#type' => 'fieldset',
    '#attributes' => array('id' => 'data_source'),
  );

  
  $form['data_source']['upload_file'] = array(
    '#type' => 'file',
    '#title' => t('File to import'),
    '#description' => t('Click "Browse..." to select a local document to upload.'),  
  );



  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Import'),
  );

  $form['#attributes'] = array('enctype' => 'multipart/form-data');

  return $form;
}

function import_erp_form_submit($form, &$form_state) {

      $validators = array('file_validate_extensions' => array('upload_file'),);
      if ($file = file_save_upload('upload_file', $validators)) {
        $fd = fopen($file->filepath, "rb");
        if (!$fd) {
          form_set_error('upload_file', t('Import failed: file %filename cannot be read.', array('%filename' => $file->filename)));
        }
        else {
          $info = fstat($fd);
          $len = $info["size"];
          $text = fread($fd, $len);
          fclose($fd);
          drupal_set_message(t('Loaded file %filename. Now processing it.', array('%filename' => $file->filename)));
          $form_state['values']['file'] = $file;

          import_erp_invoke_import($text, $form_state['values']);
        }
      }
      else {
        form_set_error('upload_file', t('Import failed: file was not uploaded.'));
      }
}




 function ERPparseMol($mvalues) {
   for ($i=0; $i < count($mvalues); $i++)
       $mol[$mvalues[$i]["tag"]] = $mvalues[$i]["value"];
   return new ImportERP($mol);
}


class ImportERP {
  
   var $tushushangpin;  
   var $shangpindaima;    
   var $shuming; 
   var $congshuming;
   var $fushucongshuming;
   var $zhuzuozhe;
   var $chubanzhe;  
   var $benbanbanci;    
   var $yinci; 
   var $dingjia;
   var $zhuangzhen;
   var $shujubiaoshi;
   var $biaozhunshuhaotiaoma;
   var $binglieshuming;
   var $yizhe; 
   var $hezuochubanzhe;
   var $banquantigongzhe;
   var $zhuzuoquanhetongdengjihao;
   var $chubanzheguobie;  
   var $chubandi;    
   var $shoubannianyue; 
   var $benbannianyue;
   var $benciyinshuanianyue;
   var $yuanbandingjia;
   var $chang;  
   var $kuan;    
   var $hou;
   var $zhongliang;
   var $yeshu;
   var $fujianleixingheshuliang;
   var $zhongtufenlei;  
   var $tongjifenlei;    
   var $yingxiaofenlei; 
   var $duzheduixiang;
   var $yuzhong;
   var $fengmianwenjian;
   var $jingcaituhuawenjian;  
   var $zhutici;    
   var $mulu; 
   var $neirongtiyao;
   var $zhuzuozhejianjie;
   var $jingcaiye;
   var $huojiangqingkuang;  
   var $chubanzhuangtai;    
   var $beizhu; 
   var $gonghuoshangshangpinid;
 
   function ImportERP ($aa) {
       foreach ($aa as $k=>$v)
           $this->$k = $aa[$k];
   }
}



/**
 * Do the actual importing from the given string, pased on the parameters passed
 * from the form.
 * 
 * @param $text
 */
function import_erp_invoke_import(&$text) {

 // parse the data:
  $xml_parser = drupal_xml_parser_create($text);
  xml_parser_set_option($xml_parser,XML_OPTION_CASE_FOLDING,0);
  xml_parser_set_option($xml_parser,XML_OPTION_SKIP_WHITE,1);
  xml_parse_into_struct($xml_parser,$text,$values,$tags);
  xml_parser_free($xml_parser);

// now begin fetch the value

 foreach ($tags as $key=>$val) {

       if ($key == "tushushangpin") {

           $molranges = $val;
           for ($i=0; $i < count($molranges); $i+=2) {
                   $offset = $molranges[$i] + 1;
               $len = $molranges[$i + 1] - $offset;
               $tdb[] = ERPparseMol(array_slice($values, $offset, $len));
           }
       } else {
           continue;
       }
   }

foreach($tdb as $value){
	
$node = array();
  $node = new stdClass;
  $node->type = "erp";
  $node->status = 1;
  $node->uid = 1;
  $node->title = $value->shuming;
 // $node->body = $value->neirongtiyao;

  $node->field_erp_dingjia[0]['value'] = $value->dingjia;
  $node->field_erp_wuliaohao[0]['value'] = $value->gonghuoshangshangpinid;
  $node->field_erp_jianglijifen[0]['value'] = $value->dingjia;
  $node->field_erp_shangpindaima[0]['value'] = $value->shangpindaima; 
  $node->field_erp_shuming[0]['value'] = $value->shuming;   
  $node->field_erp_congshuming[0]['value'] = $value->congshuming;
  $node->field_erp_fushucongshuming[0]['value'] = $value->fushucongshuming;


  $node->field_erp_zhuzuozhe[0]['value'] = $value->zhuzuozhe;
  $node->field_erp_chubanzhe[0]['value'] = $value->chubanzhe;
  $node->field_erp_benbanbanci[0]['value'] = $value->benbanbanci;
  $node->field_erp_yinci[0]['value'] = $value->yinci;

  $node->field_erp_zhuangzhen[0]['value'] = $value->zhuangzhen;
  $node->field_erp_shujubiaoshi[0]['value'] = $value->shujubiaoshi;
  $node->field_erp_shuhaotiaoma[0]['value'] = $value->biaozhunshuhaotiaoma; 


  $node->field_erp_binglieshuming[0]['value'] = $value->binglieshuming;
  $node->field_erp_yizhe[0]['value'] = $value->yizhe;
  $node->field_erp_hezuochubanzhe[0]['value'] = $value->hezuochubanzhe;
  $node->field_erp_banquantigongzhe[0]['value'] = $value->banquantigongzhe;
  $node->field_erp_hetongdengjihao[0]['value'] = $value->zhuzuoquanhetongdengjihao;  // 

  $node->field_erp_chubanzheguobie[0]['value'] = $value->chubanzheguobie;
  $node->field_erp_chubandi[0]['value'] = $value->chubandi;
  $node->field_erp_shoubannianyue[0]['value'] = $value->shoubannianyue;
  $node->field_erp_benbannianyue[0]['value'] = $value->benbannianyue;


  $node->field_erp_yinshuanianyue[0]['value'] = $value->benciyinshuanianyue;   // name too 
  $node->field_erp_yuanbandingjia[0]['value'] = $value->yuanbandingjia;
  $node->field_erp_chang[0]['value'] = $value->chang;
  $node->field_erp_kuan[0]['value'] = $value->kuan;
  $node->field_erp_hou[0]['value'] = $value->hou;
  $node->field_erp_zhongliang[0]['value'] = $value->zhongliang;
  $node->field_erp_yeshu[0]['value'] = $value->yeshu;
  $node->field_erp_fujianleixing[0]['value'] = $value->fujianleixingheshuliang;  
  $node->field_erp_yuzhong[0]['value'] = $value->yuzhong;
  $node->field_erp_fengmianwenjian[0]['value'] = $value->fengmianwenjian;
  $node->field_erp_jingcaituhua[0]['value'] = $value->jingcaituhuawenjian;  // modyfy
  $node->field_erp_zhutici[0]['value'] = $value->zhutici;
  $node->field_erp_mulu[0]['value'] = $value->mulu;
  $node->field_erp_neirongtiyao[0]['value'] = $value->neirongtiyao;
  $node->field_erp_zhuzuozhejianjie[0]['value'] = $value->zhuzuozhejianjie;
  $node->field_erp_jingcaiye[0]['value'] = $value->jingcaiye;
  $node->field_erp_huojiangqingkuang[0]['value'] = $value->huojiangqingkuang;
  $node->field_erp_chubanzhuangtai[0]['value'] = $value->chubanzhuangtai;
  $node->field_erp_beizhu[0]['value'] = $value->beizhu;
  $node->field_erp_gonghuoshangid[0]['value'] = $value->gonghuoshangshangpinid;  // modify
  
// Below data need to import into ubercart,you need to change some value.

/*
  $node->sell_price = $value->dingjia;
  $node->model = $value->gonghuoshangshangpinid;
 */
   
// if $value->tongjifenlei is not null then :

  if($value->tongjifenlei){

  $tj_vid = 1;

  if($tid = (int) db_result(db_query('SELECT tid FROM {term_data} WHERE name = "%s" AND vid = %d', $value->tongjifenlei,$tj_vid))){   
     $tj_tid = $tid;
   }else{

       // vocabulary ID is hard coded for this example
    $autoterm = array(
     'name' => $value->tongjifenlei,  // or whatever you want the auto-term to be named
     'parent' => 0,
     'vid' => $tj_vid,
    );
     taxonomy_save_term($autoterm);
     $tj_tid = (int) db_result(db_query('SELECT MAX(tid) FROM {term_data} WHERE vid = %d', $vid));
   }
   $node->taxonomy[$tj_vid][$tj_tid] = $tj_tid;

  }

// if $value->yingxiaofenlei is not null then:

  if($value->yingxiaofenlei){

	  $yx_vid = 2;       // vocabulary ID is hard coded for this example

    if($tid = (int) db_result(db_query('SELECT tid FROM {term_data} WHERE name = "%s"  AND vid = %d', $value->yingxiaofenlei,$yx_vid))){ 
		
      $yx_tid = $tid;

    }else{

    $autoterm = array(
     'name' => $value->yingxiaofenlei,  // or whatever you want the auto-term to be named
     'parent' => 0,
     'vid' => $yx_vid,
    );
     taxonomy_save_term($autoterm);
     $yx_tid = (int) db_result(db_query('SELECT MAX(tid) FROM {term_data} WHERE vid = %d', $yx_vid));
   }

   $node->taxonomy[$yx_vid][$yx_tid] = $yx_tid;

  }

  node_save($node);

}  

drupal_set_message("Import Successful!");
}
	

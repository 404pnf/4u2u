<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
function invite_menu() {
  $items['invite'] = array(
    'title' => '邀请朋友加入',
    'page callback' => 'invite_list_method_page',
		'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'invite.pages.inc',
  );
	
  $items['invite/link'] = array(
    'title' => '邀请朋友加入',
    'page callback' => 'invite_method_link_page',
		'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'invite.pages.inc',
  );
	
	$items['invite/email'] = array(
    'title' => '邀请朋友加入',
    'page callback' => 'invite_method_email_page',
		'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'invite.pages.inc',
  );
	
	$items['invite/contacts'] = array(
    'title' => '邀请朋友加入',
    'page callback' => 'invite_method_contacts_page',
		'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'invite.pages.inc',
  );
	
	$items['invite/resend'] = array(
    'title' => '邀请朋友加入',
    'page callback' => 'invite_resend_invite_callback',
		'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'invite.pages.inc',
  );
	
	/*
	$items['invite/delete'] = array(
    'title' => '邀请朋友加入',
    'page callback' => 'invite_delete_invite_callback',
		'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'invite.pages.inc',
  );
	*/
	
	
	// User profile tabs
/*   $items['user/%user/invites'] = array(
    'title' => '你的邀请历史',
    'page callback' => 'invite_user_pending_page',
		'page arguments' => array(1),
    'access callback' => 'invite_user_access',
		'access arguments' => array(1),
		'type' => MENU_LOCAL_TASK,
    'file' => 'invite.pages.inc',
  );
	
	$items['user/%user/invites/pending'] = array(
    'title' => '你的邀请历史',
    'page callback' => 'invite_user_pending_page',
    'page arguments' => array(1),
    'access callback' => 'invite_user_access',
		'access arguments' => array(1),
		'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'invite.pages.inc',
  );
	
  $items['user/%user/invites/accepted'] = array(
    'title' => '你邀请到的朋友',
    'page callback' => 'invite_user_accepted_page',
    'page arguments' => array(1),
    'access callback' => 'invite_user_access',
		'access arguments' => array(1),
		'type' => MENU_LOCAL_TASK,
    'weight' => 5,
    'file' => 'invite.pages.inc',
  ); */
  
    $items['user/%user/invites'] = array(
    'title' => '你的邀请历史',
    'page callback' => 'invite_user_accepted_page',
		'page arguments' => array(1),
    'access callback' => 'invite_user_access',
		'access arguments' => array(1),
		'type' => MENU_LOCAL_TASK,
    'file' => 'invite.pages.inc',
  );
	
  $items['user/%user/invites/accepted'] = array(
    'title' => '成功邀请到的朋友',
    'page callback' => 'invite_user_accepted_page',
    'page arguments' => array(1),
    'access callback' => 'invite_user_access',
		'access arguments' => array(1),
		'type' => MENU_DEFAULT_LOCAL_TASK,
   
    'file' => 'invite.pages.inc',
  );
		
	$items['user/%user/invites/pending'] = array(
    'title' => '邮件邀请未注册',
    'page callback' => 'invite_user_pending_page',
    'page arguments' => array(1),
    'access callback' => 'invite_user_access',
		'access arguments' => array(1),
		'type' => MENU_LOCAL_TASK,
	'weight' => 5,
    'file' => 'invite.pages.inc',
  );


	
	$items['admin/user/invite'] = array(
    'title' => '邀请',
    'page callback' => 'invite_admin_config_page',
		'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'file' => 'invite.admin.inc',
  );
	
	$items['admin/user/invite/list'] = array(
    'title' => '邀请记录汇总排名',
    'page callback' => 'invite_admin_list_page',
		'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'file' => 'invite.admin.inc',
  );

  return $items;
}
/**
 * 访问控制回调函数 
 */ 
function invite_user_access($account){
  return ($account->uid == $GLOBALS['user']->uid || $GLOBALS['user']->uid ==1);
}

/**
 * Implementation of hook_user().
 */

function invite_user($op, &$edit, &$account, $category = null) {
	switch ($op) {
		case 'insert':
		
			if(!empty($_GET['uid'])&&!empty($_GET['usercode'])){
				$uid = $_GET['uid'];
				$usercode = $_GET['usercode'];
				//通过默认推广链接过来的.
				if(strlen($usercode)<=32){
					//查询邀请链接是否有效
					$sql = "SELECT COUNT(uid) FROM {usercode} WHERE uid= %d AND ucode = '%s' ";
					$count = db_result(db_query($sql,$uid,$usercode));
					if($count){
						//插入邀请记录
						$sql = "INSERT INTO {invite} (uid, invitee, created, changed, joined, referrer) VALUES(%d, %d, %d, %d, %d, '%s')";
						$current_time = time();
						$referrer = isset($_SERVER['HTTP_REFERER'])?$_SERVER['HTTP_REFERER']:'';
						db_query($sql, $uid, $account->uid, $current_time, $current_time, $current_time, $referrer);
						//为邀请人添加分数
						$params = array (
							'uid' => $uid,
							'points' => variable_get('invite_award_points_per_user',30),
							'description' => t('通过邀请用户获取的积分.邀请了用户:@username(ID: @uid)',array('@username'=>$account->name,'@uid'=>$account->uid)),
						);
						userpoints_userpointsapi($params);
					}
				}
				//通过email邀请过来的用户
				else{
					//把邀请码分成两部分，一部分$usercode，另一部份为$invite_id
					$code_invite = explode("_",$usercode);
					$usercode = $code_invite[0];
					$invite_id = $code_invite[1];
					//查询邀请链接是否有效
					$sql = "SELECT COUNT(uid) FROM {usercode} WHERE uid= %d AND ucode = '%s' ";
					$count = db_result(db_query($sql,$uid,$usercode));
					
					if($count){
						$invite_exist_sql = "SELECT COUNT(invite_id) FROM {invite} WHERE uid= %d AND invite_id= %d";
						$invite_exist_count = db_result(db_query($invite_exist_sql, $uid, $invite_id));
						if($invite_exist_count){
							//更新邀请记录
							$sql = "UPDATE {invite} SET invitee = %d, changed = %d, joined =%d, referrer = '%s' WHERE invite_id =%d";
							$current_time = time();
							$referrer = isset($_SERVER['HTTP_REFERER'])?$_SERVER['HTTP_REFERER']:'';
							db_query($sql, $account->uid, $current_time, $current_time, $referrer, $invite_id);
							//为邀请人添加分数
							$params = array (
								'uid' => $uid,
								'points' => variable_get('invite_award_points_per_user',30),
								'description' => t('通过邀请用户获取的积分.邀请了用户:@username(ID: @uid)',array('@username'=>$account->name,'@uid'=>$account->uid)),
							);
							userpoints_userpointsapi($params);
						}				
					}			
				}
			}
			break;
			
		case 'delete':
			$sql = "DELETE FROM {invite} WHERE uid = %d";
			$sql1 = "DELETE FROM {usercode} WHERE uid = %d";
      db_query($sql,$account->uid);
			db_query($sql1,$account->uid);
      break;
	}

}

/**
 * Implementation of hook_theme().
 */
 /*
function invite_theme() {

}
*/


/**
 * Implementation of hook_mail().
 */
 
function invite_mail($key, &$message, $params) {
	$language = $message['language'];
  switch ($key) {
    case 'invite_notify':
      //$variables = user_mail_tokens($params['account'], $language);
			$default_invite_default_email_title = t('默认邀请邮件的主题');
			$default_invite_default_email_body = t('默认邀请邮件的正文');
			$default_invite_default_email_link = t('默认邀请邮件的正文下面的邀请链接');
			
			$obj = (object)$params;
			//token_replace($original, $type = 'invite', $object = NULL);
      $original_subject = variable_get('invite_default_email_title',$default_invite_default_email_title);
      $message['subject'] = token_replace($original_subject,'invite',$obj);
			$message['body'][] = $params['body'];
			
      $original_link = variable_get('invite_default_email_link',$default_invite_default_email_link);
			$message['body'][] = token_replace($original_link,'invite',$obj);
			
			//$message['body'][] ='success';
			//$message['body'][] = $params['body'];
			//$message['body'][] = $params['invite_link'];
  }
}


/**
 * Implementation of hook_token_values().
 */
 
function invite_token_values($type = 'all', $object = NULL) {
  $values = array();
  if ($type == 'invite' && is_object($object)) {
    $values['inviter']            = check_plain($object->name);
    $values['inviter-raw']        = $object->name;
		$values['join-link']          = $object->invite_link;
    //$values['join-link']          = url('user/register?uid='. $object->uid.'&usercode='.$object->code.'_'.$object->invite_id, array('absolute' => TRUE));
  }
  return $values;
}

/**
 * Implementation of hook_token_list().
 */
 
function invite_token_list($type = 'all') {
  if ($type == 'invite' || $type == 'all') {
    $tokens['invite']['inviter']            = t('邀请人的真实名字');
    $tokens['invite']['inviter-raw']        = t('邀请人的真实名字. 警告 - 原始用户输入.');
    $tokens['invite']['join-link']          = t('包含了邀请码的注册链接.');
    return $tokens;
  }
}


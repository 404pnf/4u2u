<?php
// $Id: comment_closer.module,v 1.10.2.2.2.7 2009/01/10 19:07:05 rmiddle Exp $
/**
 * @file
 * comment_closer.module
 * Automatically close comments on nodes beyond a configurable age
 */
function comment_closer_help($path, $arg) {
  switch ($path) {
    case 'admin/block/help':
      return t('<p>Automatically close comments</p>');
      break;
    case "admin/modules#description":
      $output = t('Schedule automatic closing of comments for selected node types based on the age of the node');
      break;
    case "admin/help#comment_closer":
      $output = t('<p>The commentcloser module allows you to automatically close comments via a cron hook. You can select any combination of available node types to process,</p><p>Configure the module to close comments on nodes more than one week, month or year old and schedule the closings to be done daily, weekly, monthly or annually</p>

      ');
      break;
    default:
      $output = "";
      break;
  }
  return $output;
}

function _comment_closer_nodeoptions($nodetypes) {
  return drupal_map_assoc(array_keys($nodetypes));
}

function comment_closer_settings() {
  // list of node types to affect
  // age of nodes to close comments on
  ///this next line must be replaced
  $nodetypes = node_get_types();

  $age_limit_list = array('year' => t('year'),
                          'month' => t('month'),
                          'quarterly' => t('quarterly'),
                          'week' => t('week'));
  $cycle_length_list = array(t('yearly') => t('yearly'),
                          'monthly' => t('monthly'),
                          'quarterly' => t('quarterly'),
                          'weekly' => t('weekly'),
                          'daily' => t('daily'));
  $cc_form['comment_closer_types'] = array(
    '#type' => 'select',
    '#multiple' => '1',
    '#title' => t('Node types'),
    '#default_value' => variable_get('comment_closer_types', _comment_closer_nodeoptions($nodetypes)),
    '#options' => _comment_closer_nodeoptions($nodetypes)
  );
  $cc_form['comment_closer_age'] = array(
    '#type' => 'select',
    '#title' => t('Older than'),
    '#default_value' => variable_get('comment_closer_age', 'month'),
    '#options' => $age_limit_list
  );
  $cc_form['comment_closer_cycle_period'] = array(
    '#type' => 'select',
    '#title' => t('Execute'),
    '#default_value' => variable_get('comment_closer_cycle_period', array('daily')),
    '#options' => $cycle_length_list,
  );
  return system_settings_form($cc_form);
}

function comment_closer_cron() {

  $now = time();
  $current_date = getdate($now);
  $next_cycle_time = variable_get('comment_closer_next_date', $now);
  $process_node_type_list = variable_get('comment_closer_types', 0);

  if ($now >= $next_cycle_time) {
    if ($process_node_type_list != 0 || is_array($process_node_type_list) ) {
      //set it up
      $limit = variable_get('comment_closer_age', 'month');
      switch ($limit) {
        case 'month': {
          $current_date['mon'] = $current_date['mon'] - 1;
          break;
        }
          case 'quarterly': {
          $current_date['mon'] = $current_date['mon'] - 3;
          break;
        }
        case 'year': {
          $current_date['year'] = $current_date['year'] - 1;
          break;
        }
        case 'week': {
          $current_date['mday'] = $current_date['mday'] - 7;
          break;
        }
      }
      $oldest_allowed = mktime($current_date['hours'], $current_date['minutes'], $current_date['seconds'], $current_date['mon'], $current_date['mday'], $current_date['year']);

      // knock it out
      $args = array();
      $query = "UPDATE {node} SET comment = 1 WHERE (created < %d)";
      $args[] = $oldest_allowed;
      if (!empty($process_node_type_list) && is_array($process_node_type_list)) {
        $query .= " AND type IN (". db_placeholders($process_node_type_list) .")";
        $args = array_merge($args, $process_node_type_list);
      }
      cache_clear_all();
      $result = db_query($query, $args);
      $msg = 'sql = %sql';
      $vars = array( '%sql' => $query );
      watchdog('comment_closer', $msg, $vars, WATCHDOG_DEBUG);
      // clean it up
      $current_date = getdate();

      switch (variable_get('comment_closer_cycle_period', 'weekly')) {
        case 'monthly': {
          $current_date['mon'] = $current_date['mon'] + 1;
          break;
        }
        case 'quarterly': {
          $current_date['mon'] = $current_date['mon'] + 3;
          break;
        }
        case 'yearly': {
          $current_date['year'] = $current_date['year'] + 1;
          break;
        }
        case 'weekly': {
          $current_date['mday'] = $current_date['mday'] + 7;
          break;
        }
        case 'daily': {
          $current_date['mday'] = $current_date['mday'] + 1;
          break;
        }
      }
      $comment_closer_next_date = mktime($current_date['hours'], $current_date['minutes'], $current_date['seconds'], $current_date['mon'], $current_date['mday'], $current_date['year']);
      variable_set('comment_closer_next_date', $comment_closer_next_date);
    }
  }
}

function comment_closer_menu() {
  $items['admin/settings/comment_closer'] = array(
    'title' => 'Comment closer',
    'description' => 'Set age, frequency and types of nodes for which comments will be closed.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('comment_closer_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

<?php
// $Id$
function flag_bookmarks_tx_menu() {
	$items = array ();
	$items ['bookmarks_tx'] = array (
	    'title' => '收藏图书接口', 
	    'page callback' => 'flag_bookmarks_tx_action',
	    'type' => MENU_CALLBACK,
	    'access callback' => true );
	$items ['bookmarks_tx_flaged'] = array (
	    'title' => '查看是否已收藏', 
	    'page callback' => 'bookmarks_tx_flaged',
	    'type' => MENU_CALLBACK,
	    'access callback' => true );
	
	
	$items ['flag_lishi_tx'] = array (
	    'title' => '加入历史接口', 
	    'page callback' => 'flag_lishi_tx_action',
	    'page arguments' => arg(1),
	    'type' => MENU_CALLBACK,
	    'access callback' => true );
	$items ['remove_user_lishi'] = array (
	    'title' => '清空用户历史记录', 
	    'page callback' => 'remove_user_lishi',
	    'type' => MENU_CALLBACK,
	    'access callback' => true );
	

	
	return $items;
}


function flag_bookmarks_tx_action(){
  global $user;
  drupal_bootstrap(DRUPAL_BOOTSTRAP_PATH);
	
	$nid = arg(1);
	$flag_action = arg(2);
	
	if(is_numeric($nid)){
	//如果第二个参数是节点ID	
		$flag_bookmarks = flag_get_flag('bookmarks'); 
		
		if ($flag_action == "" || $flag_action == "flag") {
		//需要收藏，或者不知道是否需要收藏，则通过判断，来确定走向
		
			
			if($flag_bookmarks && $flag_bookmarks->is_flagged($nid)){
			//如果本资源已经收藏，则返回谢琼，“已收藏，是否移除？”，通过“确定”按钮来决定是否移除收藏。移除收藏则重新调用接口，并且提供 $flag_action 值为 unflag。否则不做任何操作
			
				echo 'success';	
				
			}
			else if($flag_bookmarks && !($flag_bookmarks->is_flagged($nid))){
			//本资源没有收藏，则直接加入收藏
				$flag_action = 'flag';
				$flag_bookmarks->flag($flag_action,$nid,$user); 
				echo 'success';	
			}
			
			
		}
		else if ($flag_action == "unflag" && $flag_bookmarks && $flag_bookmarks->is_flagged($nid)){
		//如果需要移除出收藏夹，并且本资源已经在收藏夹了，则取消收藏
				$flag_bookmarks->flag($flag_action,$nid,$user); 
				echo 'false';	
		}
	}	

}

function bookmarks_tx_flaged(){
	global $user;
	$nid = arg(1);
	if(is_numeric($nid)){
	//如果第二个参数是节点ID	
		$flag_bookmarks = flag_get_flag('bookmarks'); 
		
		if ($flag_bookmarks && $flag_bookmarks->is_flagged($nid)) {
			echo 'flaged';
		}
		else if ($flag_bookmarks && !($flag_bookmarks->is_flagged($nid))) {
			echo 'unflaged';
		}
		else
			echo 'false';
	}
}

function flag_lishi_tx_action($nid){
	 global $user;
  	drupal_bootstrap(DRUPAL_BOOTSTRAP_PATH);
	
	//$nid = arg(1);
	$flag_action = arg(2);
	
	if(is_numeric($nid)){
	//如果第二个参数是节点ID	
		$flag_lishi = flag_get_flag('lishi'); 
		
		if ($flag_action == "" || $flag_action == "flag") {
		
			
			if($flag_lishi && $flag_lishi->is_flagged($nid)){
			//本资源已加入历史，则取消后再加入历史，以更新加入历史的时间
				$flag_lishi->flag('unflag',$nid,$user); 
				$flag_lishi->flag('flag',$nid,$user); 
				return 'success';	
			}
			else if($flag_lishi && !($flag_lishi->is_flagged($nid))){
			//本资源没有加入历史，则直接加入加入历史
				$flag_lishi->flag('flag',$nid,$user); 
				return 'success';	
			}
			else
				return 'false';	
		}
		else if ($flag_action == "unflag" && $flag_lishi && $flag_lishi->is_flagged($nid)){
		//如果需要移除出历史，并且本资源已经在加入历史了，则取消除出历史
				$flag_lishi->flag($flag_action,$nid,$user); 
				return 'success';	
		}
		
			
	}	
	else
		return 'false';	
}


/**
 * 删除 用户历史记录.
 */
function remove_user_lishi() {
   	global $user;
   	$fid = 2;//从flags数据库表看，加入历史flag的id是2；
	$content_type = 'node';

  	if ($user->uid>0) {

   		$result = db_query("DELETE FROM {flag_content} WHERE content_type = '%s' AND fid = %d AND uid = %d ", $content_type, $fid, $user->uid);
    
    	echo 'success';
  	}
	else
  		echo 'false';
}


/**

whx here
 * Return a list of users who have flagged a piece of content.
*/
function flag_bookmarks_tx_nodeapi(&$node, $op, $teaser, $page) {
  global $user;
  switch($op) {
    case 'view':
    	if($page){
    	
		  if ($node->type == 'ebook' || $node->type == 'shipin' || $node->type == 'app' ) {
		  
				if(flag_lishi_tx_action($node->nid)=='success')
					if($node->type == 'ebook')
						drupal_goto( 'news://b_'.urlencode('##').$node->nid.urlencode('##http:').'//2u4u.com.cn/xieq/'.$node->field_ebook_link[0]['value']);
					else if($node->type == 'shipin')
						drupal_goto('mshipin/'.$node->nid);
					else if($node->type == 'app')
						drupal_goto($node->field_app_link[0]['url']);
					else
						return 'false';
						
		  }
      }
      break;
  }
}
